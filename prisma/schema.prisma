// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid()) @db.Uuid
  email     String  @unique
  firstName String?
  lastName  String?
  password  String
  active    Boolean
}

model Sport {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  league League[]
}

model League {
  id      Int      @id @default(autoincrement())
  sport   Sport    @relation(fields: [sportId], references: [id])
  sportId Int
  name    String   @unique
  season  Season[]
}

model Season {
  id       Int       @id @default(autoincrement())
  league   League    @relation(fields: [leagueId], references: [id])
  leagueId Int
  name     String
  teams    Teams[]
  matches  Matches[]
}

model Teams {
  id               Int                @id @default(autoincrement())
  season           Season             @relation(fields: [seasonId], references: [id])
  seasonId         Int
  name             String
  logo             String?
  players          Players[]
  matches          Matches[]
  homeTeamMatches  Matches[]          @relation("homeTeam")
  awayTeamMatches  Matches[]          @relation("awayTeam")
  playersOnMatches PlayersOnMatches[]
  ResultsAfl       ResultsAfl[]
}

model Players {
  id           Int                @id @default(autoincrement())
  team         Teams              @relation(fields: [teamId], references: [id])
  teamId       Int
  name         String
  playerNumber Int
  matches      PlayersOnMatches[]
}

model Matches {
  id          Int                @id @default(autoincrement())
  season      Season             @relation(fields: [seasonId], references: [id])
  seasonId    Int
  homeTeam    Teams              @relation(fields: [homeTeamId], references: [id], name: "homeTeam")
  homeTeamId  Int
  homeTeamCsv String?
  awayTeam    Teams              @relation(fields: [awayTeamId], references: [id], name: "awayTeam")
  awayTeamId  Int
  awayTeamCsv String?
  round       Int
  date        DateTime
  teams       Teams?             @relation(fields: [teamsId], references: [id])
  teamsId     Int?
  players     PlayersOnMatches[]
  location    Location           @relation(fields: [locationId], references: [id])
  locationId  Int
  resultsAfl  ResultsAfl[]
}

model PlayersOnMatches {
  id       Int     @id @default(autoincrement())
  match    Matches @relation(fields: [matchId], references: [id])
  matchId  Int
  player   Players @relation(fields: [playerId], references: [id])
  playerId Int
  team     Teams   @relation(fields: [teamId], references: [id])
  teamId   Int
}

model Location {
  id      Int       @id @default(autoincrement())
  name    String
  matches Matches[]
}

model ResultsAfl {
  id             Int     @id @default(autoincrement())
  match          Matches @relation(fields: [matchId], references: [id])
  matchId        Int
  team           Teams   @relation(fields: [teamId], references: [id])
  teamId         Int
  scorePrimary   Int     @default(0)
  scoreSecondary String?
}
